@model ShoesListViewModel
@{
    ViewData["Title"] = "Shoes";
}


<h1>@Model.CurrentCategoryOrBrand</h1>
<br />

@if (TempData.ContainsKey("alreadyRatedMessage"))
{
    <div class="alert alert-info text-center">@TempData["alreadyRatedMessage"]</div>
}
@if (TempData.ContainsKey("ratingSubmittedMessage"))
{
    <div class="alert alert-info text-center">@TempData["ratingSubmittedMessage"]</div>
}


<a class="dropdown-toggle nav-link text-light" data-toggle="dropdown">Sort by:</a>
<ul class="dropdown-menu">
    <li>
        <a asp-controller="Shoe" asp-action="List" asp-route-sortBy="ascendingByRating"
           asp-route-categoryOrBrand="@Model.CurrentCategoryOrBrand">User Rating: Low to high</a>
    </li>
    <li>
        <a asp-controller="Shoe" asp-action="List" asp-route-sortBy="descendingByRating"
           asp-route-categoryOrBrand="@Model.CurrentCategoryOrBrand">User Rating: High to low</a>
    </li>
    <li class="dropdown-divider"></li>
    <li>
        <a asp-controller="Shoe" asp-action="List" asp-route-sortBy="ascendingByPrice"
           asp-route-categoryOrBrand="@Model.CurrentCategoryOrBrand">Price: Low to high</a>
    </li>
    <li>
        <a asp-controller="Shoe" asp-action="List" asp-route-sortBy="descendingByPrice"
           asp-route-categoryOrBrand="@Model.CurrentCategoryOrBrand">Price: High to low</a>
    </li>
</ul>


<div class="containerflex">
    @foreach (var ratedShoe in Model.RatedShoes)
    {
        <partial name="_ShoeCard" model="ratedShoe" />

    }
</div>



